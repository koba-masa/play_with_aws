AWSTemplateFormatVersion: 2010-09-09

Description: 'Web Service with ECS'

Resources:
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: play_with_aws_web_service_with_ecs # リポジトリ名
      EmptyOnDelete: true
      ImageTagMutability: MUTABLE # タブのイミュータビリティ
      Tags:
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs

  IAMRoleExecuteECSTask:
    Type: AWS::IAM::Role
    Properties:
      RoleName: play_with_aws_web_service_with_ecs_execute_ecs_task
      Description: play_with_aws_web_service_with_ecs
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: play_with_aws_web_service_with_ecs
      Tags:
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs

  ECSTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: play_with_aws_web_service_with_ecs # タスク定義ファミリー名
      RequiresCompatibilities: # 起動タイプ
        - FARGATE
      RuntimePlatform: # オペレーティングシステム／アーキテクチャ
        OperatingSystemFamily: LINUX
        CpuArchitecture: X86_64
      NetworkMode: awsvpc # ネットワークモード
      Cpu: 256 # タスクサイズ-CPU
      Memory: 512 # タスクサイズ-メモリ
      #TaskRoleArn:  # タスクロール
      ExecutionRoleArn: !Ref IAMRoleExecuteECSTask # 実行ロール
      ContainerDefinitions: # コンテナ
        # 必須コンテナ
        - Name: Nginx # 名前
          Image: !Join # イメージURI
            - ''
            - - !GetAtt ECRRepository.RepositoryUri
              - ':latest'
          Essential: true # 必須コンテナ
          PortMappings: # ポートマッピング
            - Name: http
              Protocol: tcp
              HostPort: 80
              AppProtocol: http2
              ContainerPort: 80
          ReadonlyRootFilesystem: true # 読み取り専用ルートファイルシステム
          LogConfiguration: # ログ記録
            LogDriver: awslogs
            Options: { 'awslogs-group': '/ecs/', 'awslogs-region': 'us-west-2', 'awslogs-stream-prefix': 'ecs', 'awslogs-create-group': 'true' }
          HealthCheck: # HealthCheck
              Command:
                - CMD-SHELL
                - curl -f http://localhost/ || exit 1
              Interval: 60
              Timeout: 60
              StartPeriod: 30
              Retries: 2
          # DependsOn:
          #   - ContainerDependency
          # DisableNetworking: Boolean
          # DnsSearchDomains:
          #   - String
          # DnsServers:
          #   - String
          # DockerSecurityOptions:
          #   - String
          # ExtraHosts:
          #   - HostEntry
          # FirelensConfiguration:
          #   FirelensConfiguration
          # Hostname: String
          # Interactive: Boolean
          # Links:
          #   - String
          # LinuxParameters:
          #   LinuxParameters
          # MountPoints:
          #   - MountPoint
          # Privileged: Boolean
          # PseudoTerminal: Boolean
          # ResourceRequirements:
          #   - ResourceRequirement
          # Secrets:
          #   - Secret
          # SystemControls:
          #   - SystemControl
          # User: String
          # VolumesFrom:
          #   - VolumeFrom
      Tags:
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs

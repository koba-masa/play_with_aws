AWSTemplateFormatVersion: 2010-09-09

Description: 'Web Service with ECS'

Conditions:
  HasNot: !Equals [ 'true', 'false' ]

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: play_with_aws_web_service_with_ecs
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  RouteTableForPublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: play_with_aws_web_service_with_ecs_public
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  RouteTableForPrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: play_with_aws_web_service_with_ecs_private
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: play_with_aws_web_service_with_ecs
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  VPCInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteToInternetGatewayForPublic:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTableForPublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  VPCEndpointInterfaceForECRDKR:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Interface
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.dkr
      VpcId: !Ref VPC
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroupIds:
        - !Ref SecurityGroupForVPCE

  VPCEndpointInterfaceForECRAPI:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Interface
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.api
      VpcId: !Ref VPC
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroupIds:
        - !Ref SecurityGroupForVPCE

  VPCEndpointInterfaceForCloudWatchLogs:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Interface
      ServiceName: !Sub com.amazonaws.${AWS::Region}.logs
      VpcId: !Ref VPC
      PrivateDnsEnabled: true
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroupIds:
        - !Ref SecurityGroupForVPCE

  VPCEndpointGatewayForS3:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Gateway
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcId: !Ref VPC
      RouteTableIds:
        - !Ref RouteTableForPublic
        - !Ref RouteTableForPrivate
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 's3:GetObject'
            Resource:
              - !Sub arn:aws:s3:::prod-${AWS::Region}-starport-layer-bucket/*

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC # VPC
      CidrBlock: 10.0.1.0/24 # IPv4 CIDR
      AvailabilityZone: us-west-2a # アベイラビリティーゾーン
      MapPublicIpOnLaunch: true # パブリック IPv4 アドレスを自動割り当て
      # Ipv6CidrBlock: String
      # Ipv6Native: Boolean
      # AssignIpv6AddressOnCreation: Boolean
      # EnableDns64: Boolean # DNS64 を有効化
      Tags:
        - Key: Name
          Value: play_with_aws_web_service_with_ecs_public_subnet_1
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableForPublic
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC # VPC
      CidrBlock: 10.0.2.0/24 # IPv4 CIDR
      AvailabilityZone: us-west-2b # アベイラビリティーゾーン
      MapPublicIpOnLaunch: true # パブリック IPv4 アドレスを自動割り当て
      # Ipv6CidrBlock: String
      # Ipv6Native: Boolean
      # AssignIpv6AddressOnCreation: Boolean
      # EnableDns64: Boolean # DNS64 を有効化
      Tags:
        - Key: Name
          Value: play_with_aws_web_service_with_ecs_public_subnet_2
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableForPublic
      SubnetId: !Ref PublicSubnet2

  SecurityGroupForALB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: play_with_aws_web_service_with_ecs_for_ecs_alb
      #GroupName: play_with_aws_web_service_with_ecs_for_alb
      GroupDescription: play_with_aws_web_service_with_ecs_for_ecs
      #GroupDescription: play_with_aws_web_service_with_ecs_for_alb
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - Description: Allow HTTP access from anywhere
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC # VPC
      CidrBlock: 10.0.4.0/24 # IPv4 CIDR
      AvailabilityZone: us-west-2a # アベイラビリティーゾーン
      MapPublicIpOnLaunch: false # パブリック IPv4 アドレスを自動割り当て
      # Ipv6CidrBlock: String
      # Ipv6Native: Boolean
      # AssignIpv6AddressOnCreation: Boolean
      # EnableDns64: Boolean # DNS64 を有効化
      Tags:
        - Key: Name
          Value: play_with_aws_web_service_with_ecs_private_subnet_1
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableForPrivate
      SubnetId: !Ref PrivateSubnet1

  SecurityGroupForECS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: play_with_aws_web_service_with_ecs_for_ecs_ecs
      #GroupName: play_with_aws_web_service_with_ecs_for_ecs
      GroupDescription: play_with_aws_web_service_with_ecs_for_ecs
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - Description: Allow HTTP access from ALB
          IpProtocol: tcp
          SourceSecurityGroupId: !Ref SecurityGroupForALB
          FromPort: 80
          ToPort: 80
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  SecurityGroupForVPCE:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: play_with_aws_web_service_with_ecs_for_vpce
      GroupDescription: play_with_aws_web_service_with_ecs_for_vpce
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - Description: Allow HTTPS access from ECS
          IpProtocol: tcp
          SourceSecurityGroupId: !Ref SecurityGroupForECS
          FromPort: 443
          ToPort: 443
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: play_with_aws_web_service_with_ecs_for_vpce
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  TargetGroupForALB:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: with-aws-web-service-with-ecs
      TargetType: ip
      Protocol: HTTP
      Port: 80
      IpAddressType: ipv4
      VpcId: !Ref VPC
      ProtocolVersion: HTTP1
      HealthCheckEnabled: true
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      HealthCheckPort: 80
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 5
      HealthCheckIntervalSeconds: 30
      Matcher:
        HttpCode: 200-299
      # TargetGroupAttributes:
      #   - TargetGroupAttribute
      # Targets:
      #   - TargetDescription
      Tags:
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: pw-aws-web-service-with-ecs
      Type: application
      IpAddressType: ipv4
      Scheme: internet-facing
      # LoadBalancerAttributes:
      #   - LoadBalancerAttribute
      SecurityGroups:
        - !Ref SecurityGroupForALB
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Tags:
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  ListenerForALB:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      Protocol: HTTP
      Port: 80
      DefaultActions: # To create additional rules for an Application Load Balancer, use AWS::ElasticLoadBalancingV2::ListenerRule.
        - Type: forward
          # ForwardConfig:
          #   TargetGroupStickinessConfig: # グループレベルの維持設定
          #     Enabled: true
          #     DurationSeconds: 86400
          TargetGroupArn: !Ref TargetGroupForALB

  IAMRoleExecuteECSTask:
    Type: AWS::IAM::Role
    Properties:
      RoleName: play_with_aws_web_service_with_ecs_execute_ecs_task
      Description: play_with_aws_web_service_with_ecs
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Tags:
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: play_with_aws_web_service_with_ecs
      Tags:
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs

  ECSTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: play_with_aws_web_service_with_ecs # タスク定義ファミリー名
      RequiresCompatibilities: # 起動タイプ
        - FARGATE
      RuntimePlatform: # オペレーティングシステム／アーキテクチャ
        OperatingSystemFamily: LINUX
        CpuArchitecture: X86_64
      NetworkMode: awsvpc # ネットワークモード
      Cpu: 256 # タスクサイズ-CPU
      Memory: 512 # タスクサイズ-メモリ
      #TaskRoleArn:  # タスクロール
      ExecutionRoleArn: !Ref IAMRoleExecuteECSTask # 実行ロール
      ContainerDefinitions: # コンテナ
        # 必須コンテナ
        - Name: Nginx # 名前
          Image: !Join # イメージURI
            - ''
            - - !ImportValue play-with-aws-web-service-with-ecs-ecr
              - ':latest'
          Essential: true # 必須コンテナ
          PortMappings: # ポートマッピング
            - Name: http
              Protocol: tcp
              HostPort: 80
              AppProtocol: http
              ContainerPort: 80
          ReadonlyRootFilesystem: false # 読み取り専用ルートファイルシステム
          LogConfiguration: # ログ記録
            LogDriver: awslogs
            Options: { 'awslogs-group': '/ecs/play_with_aws_web_service_with_ecs', 'awslogs-region': 'us-west-2', 'awslogs-stream-prefix': 'ecs', 'awslogs-create-group': 'true' }
          HealthCheck: # HealthCheck
              Command:
                - CMD-SHELL
                - curl -f http://localhost/ || exit 1
              Interval: 60
              Timeout: 60
              StartPeriod: 30
              Retries: 2
          # DependsOn:
          #   - ContainerDependency
          # DisableNetworking: Boolean
          # DnsSearchDomains:
          #   - String
          # DnsServers:
          #   - String
          # DockerSecurityOptions:
          #   - String
          # ExtraHosts:
          #   - HostEntry
          # FirelensConfiguration:
          #   FirelensConfiguration
          # Hostname: String
          # Interactive: Boolean
          # Links:
          #   - String
          # LinuxParameters:
          #   LinuxParameters
          # MountPoints:
          #   - MountPoint
          # Privileged: Boolean
          # PseudoTerminal: Boolean
          # ResourceRequirements:
          #   - ResourceRequirement
          # Secrets:
          #   - Secret
          # SystemControls:
          #   - SystemControl
          # User: String
          # VolumesFrom:
          #   - VolumeFrom
      Tags:
        - Key: Project
          Value: play_with_aws
        - Key: Identifier
          Value: web_service_with_ecs
        - Key: CmBillingGroup
          Value: play_with_aws_web_service_with_ecs
